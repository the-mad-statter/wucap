% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redcapr.R
\name{redcap_read}
\alias{redcap_read}
\title{Read records from a REDCap project in subsets, and stacks them
together before returning a dataset}
\usage{
redcap_read(project_id, path_credential = "~/.REDCapR", ...)
}
\value{
Currently, a list is returned with the following elements:
\itemize{
\item \code{data}: An R \code{\link[base:data.frame]{base::data.frame()}} of the desired records and columns.
\item \code{success}: A boolean value indicating if the operation was apparently
successful.
\item \code{status_codes}: A collection of
\href{https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}{http status codes},
separated by semicolons.  There is one code for each batch attempted.
\item \code{outcome_messages}: A collection of human readable strings indicating the
operations' semicolons.  There is one code for each batch attempted.  In an
unsuccessful operation, it should contain diagnostic information.
\item \code{records_collapsed}: The desired records IDs, collapsed into a single
string, separated by commas.
\item \code{fields_collapsed}: The desired field names, collapsed into a single
string, separated by commas.
\item \code{filter_logic}: The filter statement passed as an argument.
\item \code{elapsed_seconds}: The duration of the function.
}
}
\description{
From an external perspective, this function is similar to
\code{\link[REDCapR:redcap_read_oneshot]{redcap_read_oneshot()}}.  The internals differ in that \code{redcap_read}
retrieves subsets of the data, and then combines them before returning
(among other objects) a single \code{\link[base:data.frame]{base::data.frame()}}.  This function can
be more appropriate than \code{\link[REDCapR:redcap_read_oneshot]{redcap_read_oneshot()}} when returning large
datasets that could tie up the server.
}
\details{
\code{\link[REDCapR:redcap_read]{redcap_read()}} internally uses multiple calls to \code{\link[REDCapR:redcap_read_oneshot]{redcap_read_oneshot()}}
to select and return data.  Initially, only the primary key is queried
through the REDCap API.  The long list is then subsetted into batches,
whose sizes are determined by the \code{batch_size} parameter.  REDCap is then
queried for all variables of the subset's subjects.  This is repeated for
each subset, before returning a unified \code{\link[base:data.frame]{base::data.frame()}}.

The function allows a delay between calls, which allows the server to
attend to other users' requests (such as the users entering data in a
browser).  In other words, a delay between batches does not bog down
the webserver when exporting/importing a large dataset.

A second benefit is less RAM is required on the webserver.  Because
each batch is smaller than the entire dataset, the webserver
tackles more manageably sized objects in memory.  Consider batching
if you encounter the error:\preformatted{ERROR: REDCap ran out of server memory. The request cannot be processed.
Please try importing/exporting a smaller amount of data.
}

For \code{\link[REDCapR:redcap_read]{redcap_read()}} to function properly, the user must have Export
permissions for the 'Full Data Set'.  Users with only 'De-Identified'
export privileges can still use \code{redcap_read_oneshot}.  To grant the
appropriate permissions:
\itemize{
\item go to 'User Rights' in the REDCap project site,
\item select the desired user, and then select 'Edit User Privileges',
\item in the 'Data Exports' radio buttons, select 'Full Data Set'.
}
}
\examples{
\dontrun{
uri     <- "https://bbmc.ouhsc.edu/redcap/api/"
token   <- "9A81268476645C4E5F03428B8AC3AA7B"
REDCapR::redcap_read(batch_size=2, redcap_uri=uri, token=token)$data

# Specify the column types.
col_types <- readr::cols(
  record_id  = readr::col_integer(),
  race___1   = readr::col_logical(),
  race___2   = readr::col_logical(),
  race___3   = readr::col_logical(),
  race___4   = readr::col_logical(),
  race___5   = readr::col_logical(),
  race___6   = readr::col_logical()
)
REDCapR::redcap_read(
  redcap_uri = uri,
  token      = token,
  col_types  = col_types,
  batch_size = 2
)$data

}
}
\references{
The official documentation can be found on the 'API Help Page'
and 'API Examples' pages on the REDCap wiki (\emph{i.e.},
https://community.projectredcap.org/articles/456/api-documentation.html
and
https://community.projectredcap.org/articles/462/api-examples.html).
If you do not have an account for the wiki, please ask your campus REDCap
administrator to send you the static material.
}
\author{
Will Beasley
}
