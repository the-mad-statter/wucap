% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redcapr.R
\name{retrieve_credential_local}
\alias{retrieve_credential_local}
\title{Read a token and other credentials from a (non-REDCap)
database or file}
\usage{
retrieve_credential_local(project_id, path_credential = "~/.REDCapR", ...)
}
\arguments{
\item{project_id}{The ID assigned to the project withing REDCap.  This
allows the user to store tokens to multiple REDCap projects in one file.
Required}

\item{path_credential}{The file path to the CSV containing the credentials.
Required.}
}
\value{
A list of the following elements are returned from
\code{retrieve_credential_local()} and \code{retrieve_credential_mssql()}:
\itemize{
\item \code{redcap_uri}: The URI of the REDCap Server.
\item \code{username}: Username.
\item \code{project_id}: The ID assigned to the project within REDCap.
\item \code{token}: The token to pass to the REDCap server
\item \code{comment}: An optional string that is ignored by REDCapR
but can be helpful for humans.
}
}
\description{
These functions are not essential to calling the REDCap API,
but instead are functions that help manage tokens securely.
}
\details{
If the database elements are created with the script provided in package's
'Security Database' vignette, the default values will work.

The \code{create_credential_local()} function copies a
\href{https://github.com/OuhscBbmc/REDCapR/blob/master/inst/misc/skeleton.credentials}{static file}
to the location specified in the \code{path_credential} argument.
Each record represents one accessible project per user.
Follow these steps to adapt to your desired REDCap project(s):
\enumerate{
\item Modify the credential file for the REDCap API with a text editor
like \href{https://notepad-plus-plus.org/}{Notepad++},
\href{https://code.visualstudio.com/}{Visual Studio Code}, or
\href{https://www.nano-editor.org/}{nano}.
Replace existing records with the information from your projects.
Delete the remaining example records.
\item Make sure that the file (with the sensitive password-like) tokens
is stored securely!
\item Contact your REDCap admin to request the URI & token and
discuss institutional policies.
\item Ask your institution's IT security team for their recommendation
\item For more info, see https://ouhscbbmc.github.io/REDCapR/articles/workflow-read.html
and https://ouhscbbmc.github.io/REDCapR/reference/retrieve_credential.html
\item Double-check the file is secured and not accessible by other users.
}
}
\note{
Although we strongly encourage storing all the tokens on a central server
(\emph{e.g.}, see the \code{retrieve_credential_mssql()} function and the
"SecurityDatabase" vignette), there are times when this approach is not
feasible and the token must be stored locally.  Please contact us
if your institution is using something other than SQL Server, and
would like help adapting this approach to your infrastructure.
}
\examples{
# ---- Local File Example ----------------------------
path <- system.file("misc/example.credentials", package = "REDCapR")
(p1  <- REDCapR::retrieve_credential_local(path, 153L))
(p2  <- REDCapR::retrieve_credential_local(path, 212L))


\dontrun{
# Create a skeleton of the local credential file to modify
path_demo <- base::tempfile(pattern = "temp", fileext = ".credentials")

create_credential_local(path_demo)

base::unlink(path_demo) # This is just a demo; don't delete the real file!
}
}
\author{
Will Beasley
}
